// * This is the main configuration file read by the game server on startup.
// * Deleting this file will effectively remove the mod and revert the server back to being another vanilla server.
// * It's safe to modify this file while the server is running, it will not be
//   overwritten on server shutdown.

exec "scripts/scriptpipe.csl"
exec "scripts/irc.csl"
exec "scripts/baselib.csl"
exec "scripts/commands.csl"
exec "conf/vars.conf"

logfile "logs/server.log" server_log
log = [
    reference text arg1
    if $log_timestamp [server_log (format "[%1] %2" (time (now)) $text)] [server_log $text]
]

event_handler $onconnect [
    reference cn arg1
    
    local country_log ""
    if (symbol? country) [country_log = (format "(%1)" (country (player_ip $cn)))]
    
    log (format "%1(%2)(%3)%4 connected" (player_name $cn) $cn (player_ip $cn) $country_log)
    
    if (&& (! (strcmp (player_name $cn) "unnamed")) (symbol? country)) [
        local location (country (player_ip $cn))
        if (strcmp $location "unknown") [location = "unknown location"]
        msg (format "%1 is connected from %2" (grey (player_name $cn)) (grey $location))
    ]
    
    sleep 2000 [
        local cn @cn
        local connection_id @(player_conid $cn)
        if (= $connection_id (try player_conid $cn [-1])) [
            privmsg $cn (orange [@title server])
            privmsg $cn $motd
        ]
    ]
    
    if (&& (symbol? showaliases) $enable_showaliases) [
        foreach (privplayers) [
            privmsg $arg1 (info (format "Alt names used by %1: %2" (player_name $cn) (showaliases $cn)))
        ]
    ]
]

event_handler $ondisconnect [
    reference cn arg1
    reference reason arg2
    
    discmsg = "disconnected"
    if (! (= $reason 0)) [discmsg = (format "disconnected (%1)" (disc_reason $reason))]
    
    log (format "%1(%2) %3, connection time: %4" (player_name $cn) $cn $discmsg (duration (player_contime $cn)))
    
    if (= $reason $DISC_KICK) [player_var $cn kicked 1]
    
    if (= $playercount 0) [
        sleep 1 [ //execute after ondisconnect handlers
            if $auto_update server_update
            sleep 1 defaultgame 
        ]
    ]
]

event_handler $onrename [
    reference cn arg1
    reference oldname arg2
    reference newname arg3
    
    log (format "%1(%2) renamed to %3" $oldname $cn $newname)
]

event_handler $onreteam [
    reference cn arg1
    reference oldteam arg2
    reference newteam arg3
    
    log (format "%1(%2) changed team to %3" (player_name $cn) $cn $newteam)
]

event_handler $onchmm [
    reference cn arg1
    reference newmode arg2
    
    log (format "mastermode is now %1, was set by %2(%3)" $newmode (player_name $cn) $cn)
    
    if (= $newmode $MM_PRIVATE) [
        allowhost 127.0.0.1
    ]
]

event_handler $onkick [
    parameters target master mins
    target_id = (format "%1(%2)" (player_name $target) $target)
    if (= $master -1) [master_id = "a server admin"] [master_id = (format "%1(%2)" (player_name $master) $master)]
    if (= $mins -1) [bantime = ""] [bantime = (format "and banned for %1 minutes" $mins)]
    log (format "%1 was kicked by %2 %3" $target_id $master_id $bantime)
]

event_handler $ontext [
    reference cn arg1
    reference text arg2
    
    log (format "%1(%2): %3" (player_name $cn) $cn $text)
    
    if (! $allow_talk) [
        privmsg $cn (err (concat "Talking is banned at this time because:" $disallow_talk_reason))
        veto 1
    ]
    
    if (player_var $cn mute) [
        privmsg $cn (err "Your voice privilege has been revoked.")
        veto 1
    ]
    
    local cmd 0
    
    if (match "^#.*$" $text) [
        veto 1
        arguments = (split $text " ")
        cmdname = (at (split (at $arguments 0) #) 0)
        filename = (format "./scripts/commands/%1.csl" $cmdname)
        if (path? $filename) [exec $filename] [
            dynamic_command = (concatword playercmd_ $cmdname)
            if (symbol? $dynamic_command) [
                arguments = (erase1st $arguments)
                try do [@dynamic_command @arguments] [
                    log_status [@dynamic_command function failed with error @arg1]
                    privmsg $cn (err "Command failed. Check your arguments and your privilege level.")
                ]
            ] [privmsg $cn (err "Command not found.")]
        ]
        cmd = 1
    ]
    
    if (&& (! $cmd) (strcmp (player_status $cn) "spying")) [
        veto 1
        console (player_name $cn) $text
    ]
]

event_handler $onsayteam [
    parameters cn text
    log (format "%1(%2)(team): %3" (player_name $cn) $cn $text)
]

event_handler $onmapvote [
    reference cn arg1
    reference mode arg2
    reference map arg3
    
    local admin (strcmp (player_priv $cn) "admin")
    
    if (|| $admin $mapvoting_enabled) [
        log (format "%1(%2) suggests %3 on map %4" (player_name $cn) $cn $mode $map)
    ] [
        privmsg $cn (err "Map voting is disabled.")
        veto 1
    ]
]

event_handler $onsetmap [
    if $custom_maprotation_enabled setnextmap
    if $custom_gametime_enabled [gametime $custom_gametime]
]

event_handler $onmapchanged [

    if (> $playercount 0) [
        log (format "new game: %1" (gameinfo))
    ]
    
    currentmap = $mapname
    
    if (strcmp $gamemode "coopedit") [
        event_handler $onmapchange [ //cleanup on next map change
            mastermode @mastermode
            cancel_handler
        ]
        if $allow_mm_locked [
            mastermode $MM_LOCKED
            console script [Server is locked for coopedit mode.]
        ] [msg (info "Warning! This server doesn't allow locked mastermode.")]
    ]
    
    if (> $gamecount 1) check_scriptpipe
]

event_handler $onnewmap [
    reference cn arg1
    reference size arg2
    
    log (format "%1(%2) set new map of size %3" (player_name $cn) $cn $size)
]

event_handler $onsetmaster [
    reference cn arg1
    reference set arg2
    
    if (strcmp (player_priv $cn) "none") [
        log (format "%1(%2) relinquished privileged status." (player_name $cn) $cn)
        currentmaster = -1
    ] [
        log (format "%1(%2) claimed %3" (player_name $cn) $cn (player_priv $cn))
        currentmaster = $cn
    ]
]

event_handler $onauth [
    parameters cn success authname
    if $success [
        log (format "%1(%2) passed authentication as '%3'." (player_name $cn) $cn $authname)
    ] [log (format "%1(%2) failed authentication as '%3'." (player_name $cn) $cn $authname)]
]

event_handler $onspectator [
    reference cn arg1
    reference spec arg2
    if $spec [action = "joined"] [action = "left"]
    log (format "%1(%2) %3 spectators" (player_name $cn) $cn $action)
]

event_handler $ondeath [
    reference offender arg1
    reference victim arg2
    local suicide (= $offender $victim)
    
    if (&& $teamkill_limit_enabled (&& (! $suicide) (&& (teamgame) (strcmp (player_team $offender) (player_team $victim))))) [
        local count (player_var $offender teamkills (+ 1 (player_var $offender teamkills)))
        local times (player_var $offender teamkill_times (concat $uptime (player_var $offender teamkill_times)))
        
        if (!= (player_var $offender teamkill_warned) 1) [
            privconsole $offender script [Teamkill restrictions per game: maxcount=@teamkill_limit maxrate=@teamkill_maxrate per min.]
            player_var $offender teamkill_warned 1
        ]
        
        if (> $count 1) [
            msg (gameplay (format "%1 has fragged team mates %2 times." (print_name $offender) $count (player_gun $offender)))
        ]

        if (> (player_var $offender teamkills) $teamkill_limit) [
            kick $offender 30
            console script [@(player_name $offender) was kicked for exceeding teamkill limit.]
            log (format "%1 was kicked for team killing." (player_name $offender))
        ] [
            if (&& (> (listlen $times) $teamkill_maxrate) [< (add_intervals $times $teamkill_maxrate) 60000]) [
                kick $offender 30
                console script [@(player_name $offender) was kicked for exceeding maximum teamkill rate.]
                log (format "%1 was kicked for team killing." (player_name $offender))
            ]
        ]
    ]
]

event_handler $onshutdown [
    
    log [server shutdown @(datetime (now))]
    
    if $irc_enabled [
        log "Terminating the IRC bot"
        log_status "Waiting 2 seconds for the IRC bot to update..."
        server_sleep 2000 //give the ircbot time to read and broadcast the latest log messages
        kill $irc_pid
    ]
]

exec scripts/maps.csl

if $auto_update [
    exec scripts/auto-update.csl
    track_file_for_update $SERVER_FILENAME
    track_file_for_update conf/server.conf
    track_file_for_update conf/vars.conf
    track_file_for_update conf/maps.conf
]
if $record_player_stats [exec scripts/stats/stats.csl]
if $autoteambalance [exec scripts/teambalance.csl]

defaultgame = [
    //TODO refactoring: extract cleanup code
    
    mastermode $MM_OPEN
    changemap $default_mode $default_map
    gametime $default_gametime
]

defaultgame

if $irc_enabled [
    daemon bin/irc.pl [] logs/irc.log logs/irc.log
]

//Variables that are too obscure or technical to be located in vars.conf
flood_protection SV_TEXT 1000
flood_protection SV_SETMASTER 10000
flood_protection SV_KICK 30000
flood_protection SV_MAPVOTE 5000

currentmaster = -1
allow_talk = 1
disallow_talk_reason = ""

log_status "*** Running Hopmod 3.0 (dev) for Sauerbraten CTF Edition ***"
log [server started @(datetime (now))]

open_scriptpipe

load paths "./lib"
load module geoip

//A player command that allows admin players to execute cubescript code on the server in-game.
//Syntax is "#eval [<code>]", with the square brackets included and <code> being your code.
playercmd_eval = [
    if (strcmp (player_priv $cn) "admin") [do [@arg1]] [privmsg $cn (err "Permission Denied")]
]

printsvinfo = [
    parameters filename
    local output [  Server Title: @title
  Max Players: @maxclients
  Running auto-update: @(yesno $auto_update)
  Running IRC bot: @(yesno $irc_enabled)
  Running stats database: @(yesno $record_player_stats)]
    system [echo "@output" >> @filename]
]

printsvstatus = [
    parameters filename
    local output (format "%1/%2, %3 %4, %5 mins left" $playercount $maxclients $mapname $gamemode $timeleft)
    system [echo "@output" >> @filename]
]
