// Common library code

//beep = [system [/home/graham/scripts/beep.sh]]

mins = [* $arg1 60000]
secs = [* $arg1 1000]

duration = [
    local seconds $arg1
    
    local hours (div $seconds 3600)
    seconds = (- $seconds (* $hours 3600))
    
    local mins (div $seconds 60)
    seconds = (- $seconds (* $mins 60))
    
    local secs $seconds
    
    if (< $hours 10) [hours = [0@hours]]
    if (< $mins 10) [mins = [0@mins]]
    if (< $secs 10) [secs = [0@secs]]
    
    result (format "%1:%2:%3" $hours $mins $secs)
]

fduration = [
    local seconds $arg1
    
    local hours (div $seconds 3600)
    seconds = (- $seconds (* $hours 3600))
    
    local hourdes "hours"
    if (= $hours 1) [hourdes = "hour"]
    
    local mins (div $seconds 60)
    seconds = (- $seconds (* $mins 60))
    
    local mindes "minutes"
    if (= $mins 1) [mindes = "minute"]
    
    local secs $seconds
    
    local secdes "seconds"
    if (= $secs 1) [secdes = "second"]
    
    if (> $hours 0) [
        string = (concat $hours $hourdes)
        if (> $mins 0) [string = (concat $string (concat $mins $mindes))]
    ] [
        if (> $mins 0) [
            string = (concat $mins $mindes)
            if (> $secs 0) [string = (concat $string (concat $secs $secdes))]
        ] [string = (concat $secs $secdes)]
    ]
    
    result $string
]

concol = [format "s%1%2r" $arg1 $arg2]
green = [concol 0 $arg1]
info = [concol 1 $arg1]
err = [concol 3 $arg1]
grey = [concol 4 $arg1]
magenta = [concol 5 $arg1]
orange = [concol 6 $arg1]
gameplay = [concol 2 $arg1]

msgteam = [
    parameters team text
    if (teamgame) [
        foreach (players) [
            reference cn arg1
            if (strcmp $team (player_team $cn)) [
                privmsg $cn $text
            ]
        ]
    ]
]

msgspecs = [
    reference text arg1
    foreach (players) [
        if (strcmp (player_status $arg1) "spectator") [
            privmsg $arg1 $text
        ]
    ]
]

specall = [foreach (players) [spec $arg1]]
unspecall = [foreach (players) [unspec $arg1]]
countspecs = [
    local n 0
    foreach (players) [if (strcmp (player_status $arg1) "spectator") [n = (+ $n 1)]]
    result $n
]

announce = [

    foreach (players) [
        reference cn arg1
        player_var $cn last_status (player_status $cn)
        spec $cn
    ]
    
    notalk 7000 [server announcement is being read.]
    
    sleep 2000 [
        msg (concat "Server announcement:" (green [@@arg1]) )
        sleep 5000 [
            foreach (players) [
                if (! (strcmp (player_var $arg1 last_status) "spectator")) [unspec $arg1]
            ]
        ]
    ]
]

gameinfo = [
    local clients ""
    if (> $playercount 0) [
        local specs (countspecs)
        clients = (format "%1 players" (- $playercount $specs))
        if $specs [clients = (concat $clients (format "%1 spectators" $specs))]
    ] [clients = "no players"]
    local timeleft (fduration (div $gametime 1000))
    local mode&map (format "%1 %2" $gamemode $mapname)
    result (format "%1, %2, %3" $clients $timeleft $mode&map)
]

console = [
    parameters operator message
    msg (concatword "Server console" (magenta (concatword "(" $operator ")")) ": " (green $message) )
]

privconsole = [
    parameters cn operator message
    privmsg $cn (concatword "Server console" (magenta (concatword "(" $operator ")")) ": " (green $message) )
]

notalk = [
    parameters time reason
    sleep $time [allow_talk = @allow_talk; disallow_talk_reason = [@@disallow_talk_reason]]
    allow_talk = 0
    disallow_talk_reason = $reason
]

print_name = [
    parameters cn
    local name (player_name $cn)
    if (dupname $cn) [name = (concatword $name (format (magenta "(%1)") $cn))]
    result $name
]

add_intervals = [
    parameters lst num
    if (< $num 2) 0 [(+ (- (at $lst (- $num 2)) (at $lst (- $num 1))) (add_intervals $lst (- $num 1)))]
]

count_intervals = [
    parameters list duration
    local i 0
    while [&& (< $i @(listlen $list)) [< (- $uptime (at $list $i)) $duration]] [i = (+ $i 1)]
    result $i
]

do = [arg1]

erase1st = [
    parameters lst
    local newlst ""
    local first 1
    foreach $lst [
        if (! $first) [
            newlst = (concat $newlst $arg1)
        ] [ first = 0 ]
    ]
    result $newlst
]

readfile = [system [cat @(shell_quote $arg1)]]
