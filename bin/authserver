#!/bin/bash

source bin/env.sh

execOnServer(){
    if [ -p authexec ] 
    then
        echo $1 > authexec
    fi
}

case "$1" in
    'start')

        if [ -p authexec ]
        then
            echo "It appears the auth server is already running."
            exit 1
        fi
        
        # enable core dump
        ulimit -c unlimited
        
        # cleanup and initiation
        rm -f log/authstatus.log
        touch log/authstatus.log
        touch log/autherror.log
        ERROR_START=`stat -c %s log/autherror.log`
        ERROR_START=$(( $ERROR_START + 1 ))
        
        # start the game server as a background process
        nohup bin/sauer_authserver $AUTHSERVER_OPTIONS 1>log/authstatus.log 2>>log/autherror.log </dev/null &
        
        #wait for server to start up and print the initial status messages
        until `cat log/authstatus.log | grep -q *READY*`
        do
            #stop if server has terminated
            jobs %- > /dev/null 2>&1
            RUNNING=$?
            if [ "$RUNNING" = "1" ]
            then
                break
            fi
        done
        
        tail -c +$ERROR_START log/autherror.log
        cat log/authstatus.log
        
        if [ -r bin/authserver.users ]
        then
    	    execOnServer "exec bin/authserver.users"
    	fi
;;
    'stop')
        execOnServer shutdown
;;
    *)
        $0 start
esac
